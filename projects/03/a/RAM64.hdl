// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
DMux8Way(in=load,sel=address[3..5],a=p1,b=p2,c=p3,d=p4,e=p5,f=p6,g=p7,h=p8);
RAM8(in=in,address=address[0..2],load=p1,out=q1);
RAM8(in=in,address=address[0..2],load=p2,out=q2);
RAM8(in=in,address=address[0..2],load=p3,out=q3);
RAM8(in=in,address=address[0..2],load=p4,out=q4);
RAM8(in=in,address=address[0..2],load=p5,out=q5);
RAM8(in=in,address=address[0..2],load=p6,out=q6);
RAM8(in=in,address=address[0..2],load=p7,out=q7);
RAM8(in=in,address=address[0..2],load=p8,out=q8);
Mux8Way16(a=q1,b=q2,c=q3,d=q4,e=q5,f=q6,g=q7,h=q8,sel=address[3..5],out=out);

}